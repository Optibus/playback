version: 2.1

orbs:
  python: circleci/python@0.2.1

jobs:
  lint:
    docker:
      - image: circleci/python:3.7.9
    steps:
      - checkout
      - python/load-cache
      - run:
          command: sudo pip install -e .[dev]
      - python/save-cache
      - run:
          command: |
            mkdir ./results
            pylint playback > ./results/pylint.xml
            flake8 playback --max-line-length=120 --format junit-xml > ./results/flake8.xml
      - store_test_results:
          path: ./results

  python2-tests:
    docker:
      - image: circleci/python:2.7.18
    steps:
      - checkout
      - python/load-cache
      - run:
          command: sudo pip install -e .[dev]
      - python/save-cache
      - run:
          command: |
            mkdir ./results
            pytest tests --junit-xml=./results/python2-tests.xml
      - store_test_results:
          path: ./results

  python3-tests:
    docker:
      - image: circleci/python:3.7.9
    steps:
      - checkout
      - python/load-cache
      - run:
          command: sudo pip install -e .[dev]
      - python/save-cache
      - run:
          command: |
            mkdir ./results
            pytest --cov=playback --cov-config=.coveragerc tests --junit-xml=./results/python3-tests.xml
      - run:
          command: pip install --user codecov && codecov -t ${CODECOV_TOKEN}
      - store_test_results:
          path: ./results


  bump:
    docker:
      - image: circleci/python:2.7.18
    steps:
      - checkout
      - run:
          command: pip install bumpversion
      - run:
          command: |
            git config user.email "playback_circleci@optibus.com"
            git config user.name "playback_circleci"
            bumpversion patch
      - run:
          command: git push --follow-tags --set-upstream origin ${CIRCLE_BRANCH}

  deploy:
    docker:
      - image: circleci/python:2.7.18
    steps:
      - checkout
      - run:
          command: |
            sudo pip install twine
      - run:
          name: verify git tag vs. version
          command: python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = eitany" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            sudo python setup.py sdist
            sudo python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            twine upload dist/*

workflows:
  build_and_deploy:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - python2-tests:
          filters:
            tags:
              only: /.*/
      - python3-tests:
          filters:
            tags:
              only: /.*/
      - bump:
          requires:
            - python2-tests
            - python3-tests
            - lint
          filters:
            branches:
              only: main
      - deploy:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
